name: CI

on:
  push:
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache deps
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Test
        run: yarn test

  build:
    name: 'Build'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache deps
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build
        run: yarn build
      - name: Docker build
        run: docker build .

  docker:
    name: 'Docker publish'
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
            
  deploy-demo:
    name: Deploy demo site
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache deps
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build
        run: yarn build
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
